{
  "topic_id": 25,
  "topic_name": "RunBlocking",
  "points": [
    {
      "id": 1,
      "point": "runBlocking create a coroutine scope.",
      "sub_points": null,
      "snippet_codes": null
    },
    {
      "id": 2,
      "point": "runBlocking is also a coroutine builder that bridges the non-coroutine world of a regular fun and the code with coroutines inside of runBlocking curly braces.",
      "sub_points": null,
      "snippet_codes": null
    },
    {
      "id": 3,
      "point": "The name of runBlocking means that the thread that runs it gets blocked for the duration of the call, until all the coroutines inside runBlocking complete their execution.",
      "sub_points": null,
      "snippet_codes": null
    },
    {
      "id": 4,
      "point": "You will often see runBlocking used like that at the very top-level of the application and quite rarely inside the real code.",
      "sub_points": [
        "Threads are expensive resources and blocking them is inefficient and is often not desired.",
        "Frequently used in test environments to ensure synchronous execution of coroutine-based code."
      ],
      "snippet_codes": null
    }
  ]
}